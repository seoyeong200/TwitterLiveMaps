version: "3"

services:
  
  zookeeper:
    container_name: zookeeper
    image: psyoblade/data-engineer-zookeeper:1.0
    ports:
      - "2181:2181"
  kafka:
    container_name: kafka
    hostname: kafka
    image: psyoblade/data-engineer-kafka:1.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "groups:1:1, nct:1:1, bts:1:1"
      KAFKA_HEAP_OPTS: "-Xmx400m -Xms400m"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  mongodb:
    image: mongo:4.4.2
    container_name: mongo
    restart: always
    ports:
        - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
    environment: 
        MONGO_INITDB_ROOT_USERNAME: $MONGODB_USER
        MONGO_INITDB_ROOT_PASSWORD: $MONGODB_PASSWORD
    # volumes:
    #   - ./mongodb:/data/db
    # docker exec -it mongodb /bin/bash mongo -u root -p 123456
    
  mongo-express:
      image: mongo-express
      container_name: mongo-express
      restart: always
      depends_on: 
          - mongodb
      ports:
          - "27018:27018"
      environment:
          ME_CONFIG_MONGODB_ADMINUSERNAME: root
          ME_CONFIG_MONGODB_ADMINPASSWORD: pass
          ME_CONFIG_MONGODB_SERVER: mongo-dev

  notebook:
    container_name: notebook
    user: jovyan
    privileged: true
    image: psyoblade/data-engineer-notebook:1.7.3
    # image: sykim98/spark_notebook_kafka:1.1
    restart: always
    volumes:
      - ./notebooks/work:/home/jovyan/work
    environment:
      - GRANT_SUDO=yes
    ports:
      - "4040:4040"
      - "4041:4041"
      - "8888:8888"

    # 웹 도커로 올리기
  # producer:
  #   build: ./services/producer
  #   restart: unless-stopped
  #   ports: ["8080:8080"]
  #   environment:  
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 
  # consumer:
  #   build: ./consumer
  #   restart: always
  #   ports: ["3000:3000"]
  #   environment: 
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 
  #   volumes:
  #     - ./consumer/:/usr/src/app
  #     - /usr/src/app/node_modules
  #   depends_on: 
  #     - kafka
    
  # web:
  #   depends_on: 
  #     - mongodb
  #     - kafka
  #   build: ./app
  #   # volumes:
  #   #   - ./app:/app
  #   restart: always
  #   ports:
  #     - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
  #   env_file: ./.env
  #   environment:
  #     - DB_HOST=mongodb
  #     - DB_USER=$MONGODB_USER
  #     - DB_PASSWORD=$MONGODB_PASSWORD
  #     - DB_NAME=$MONGODB_DATABASE
  #     - DB_PORT=$MONGODB_DOCKER_PORT
  #   stdin_open: true
  #   tty: true





networks:
  default:
    name: advanced_day5_network
